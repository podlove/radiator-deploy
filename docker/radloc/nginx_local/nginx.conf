user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

	server {
		listen 80;
		listen [::]:80;
		server_name %%RADIATOR_HOST%%;
		
		# To allow special characters in headers
		ignore_invalid_headers off;
		# Allow any size file to be uploaded.
		# Set to a value such as 1000m; to restrict file size to a specific value
		client_max_body_size 0;
		# To disable buffering
		proxy_buffering off;
		
		# Proxy requests to the bucket "radiator" to MinIO server running on port 9000
		location /media/ {
			proxy_http_version 1.1;
			proxy_buffering off;
			# proxy_ssl_session_reuse on; # enable this if you are internally connecting over SSL
			proxy_read_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
			proxy_send_timeout 15m; # Default value is 60s which is not sufficient for MinIO.
			proxy_request_buffering off; # Disable any internal request bufferring.
			proxy_set_header Host $http_host;
			proxy_pass http://minio:9000/radiator/;
		}
		
		# Proxy Radiator base
		location / {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_pass http://radiator:4000;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
		
	}
}